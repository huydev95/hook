var throttleLookup = {};
var throttleList   = [];

module.exports.track = function(name, throttler) {
  throttleLookup[name] = throttler;
  throttleList.push([ name, throttler ]);
};

class ThrottleAdmin {

  function initialize(throttler) {
    this.throttlers = throttler ? [ [ 'Throttler', throttler ] ] : throttleList;

    this.$$main = <<END:jsml
      %h1 Throttle Admin
      %h5 Throttlers
      %ol
        - for (var i=0; i<this.throttlers.length; i++) {
          - var name      = this.throttlers[i][0];
          - var throttler = this.throttlers[i][1];
          %li= name;
    END

    this.$$throttler = <<END:jsml
      %h1 Throttle Admin
      %div= "Allowed: " + this.allowCount;
      %div= "Denied: "  + this.denyCount;
      %table
        %tr
          %th Key
          %th Count

        - for (var k in this.trackers) {
          %tr
            %td= k;
            %td
              %a{ "href": "/keys/" + k }= this.trackers[k].getCount();
    END

    this.$$key = <<END:jsml
      %h1= this.key;
    END
  }

  function listen(port) {
    var self = this;
    require('http').createServer(#{
      self.handleRequest($1, $2); 
    }).listen(port);
  }

  function handleRequest(req, res) {
    var m = req.url.match(/^(\w+)\/(.*)/);
    res.writeHead(200, { 'Content-Type': 'text/html' });

    // default page
    if (!m) {
      res.end(this.$$main.result(this));
    } 
    
    // has key and throttler name
    else if (m[2]) {
      res.end(this.$$key.result({ key: m[2], tracker: throttleLookup[m[1]].trackers[m[2]] }));
    } 
    
    // hash throttler name
    else if (m[1]) {
      res.end(this.$$throttler.result({ key: m[2], tracker: throttleLookup[m[1]] }));
    }
  }
}
